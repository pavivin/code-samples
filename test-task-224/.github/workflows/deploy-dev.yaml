# name: Workflow для развертывания dev-окружения

# on:
#   push:
#     branches: ["dev"]
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: username
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Build the Docker image
#         run: docker build . -t image:$(git rev-parse --short "$GITHUB_SHA")
#       - name: Push the Docker image
#         run: docker push image:$(git rev-parse --short "$GITHUB_SHA")

#   paths-filter:
#     runs-on: ubuntu-latest
#     outputs:
#       output1: ${{ steps.filter.outputs.workflows }}
#     steps:
#       - uses: actions/checkout@v2
#       - uses: dorny/paths-filter@v2
#         id: migrations
#         with:
#           filters: |
#             src:
#               - 'migrations/**'

#   migrate:
#     runs-on: ubuntu-latest
#     needs: [paths-filter, build]
#     if: needs.paths-filter.outputs.migrations == 'true'
#     steps:
#       - uses: actions/checkout@v3
#       - id: ssh-context
#         uses: invi5H/ssh-action@v1
#         with:
#           SSH_HOST: ${{ secrets.SSH_HOST }}
#           SSH_USER: ${{ secrets.SSH_USER }}
#           SSH_KEY: ${{ secrets.SSH_KEY }}
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: username
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Load env
#         run: echo "${{ secrets.ENV_CONTENTS}}" > .env
#       - name: Migrate db
#         run: DOCKER_HOST=ssh://${{ steps.ssh-context.outputs.SERVER }} docker run --env-file .env --network image-dev image:$(git rev-parse --short "$GITHUB_SHA") alembic upgrade head

#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build]
#     steps:
#       - uses: actions/checkout@v3
#       - id: ssh-context
#         uses: invi5H/ssh-action@v1
#         with:
#           SSH_HOST: ${{ secrets.SSH_HOST }}
#           SSH_USER: ${{ secrets.SSH_USER }}
#           SSH_KEY: ${{ secrets.SSH_KEY }}
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: username
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Prepare env
#         run: echo "${{ secrets.ENV_CONTENTS}}" > .env
#       - name: Update docker tag
#         run: echo "IMAGE_TAG=$(git rev-parse --short "$GITHUB_SHA")" >> .env
#       # - name: Kill previous deployment
#       #   run: DOCKER_HOST=ssh://${{ steps.ssh-context.outputs.SERVER }} docker-compose -p network-dev stop web worker
#       - name: Recreate deployment
#         run: DOCKER_HOST=ssh://${{ steps.ssh-context.outputs.SERVER }} docker-compose -p network-dev up -d web worker
